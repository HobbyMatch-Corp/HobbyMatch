@using System.Linq
@using HobbyMatch.BL.DTOs.Events
@using HobbyMatch.Domain.Entities
@inject NavigationManager NavigationManager

<MudCard Class="ma-2 d-flex flex-column justify-center rounded-lg"
Style="width: calc(100% - 16px); border: 2px solid var(--mud-palette-secondary); border-radius: 16px;"
Elevation="3">
    <MudCardContent>
        <MudText Typo="Typo.h6" Class="mb-3" Align="Align.Center"
        Style="cursor: pointer;" Color="Color.Primary"
        @onclick="NavigateToUserPage">Upcoming Events</MudText>
        <div style="overflow-y: auto;">
            @if (UpcomingEventsList != null && UpcomingEventsList.Any())
            {
                <MudList T="Event" Clickable="false" Style="max-height: 600px; overflow-y: scroll;">
                    @foreach (var evt in UpcomingEventsList.OrderBy(e => e.StartTime))
                    {
                        <MudListItem Expanded="false">
                            <ChildContent>
                                <div class="d-flex">
                                    <!-- Start Time Only -->
                                    <div class="mr-3 text-center align-content-center">
                                        <MudText Typo="Typo.body1" Class="mb-0 font-weight-bold" Color="Color.Secondary">
                                            @evt.StartTime.ToString("HH:mm")
                                        </MudText>
                                        <MudText Typo="Typo.body2" Class="mt-0" Color="Color.Secondary">
                                            @evt.StartTime.ToString("dd.MM.yyyy")
                                        </MudText>

                                    </div>

                                    <div style="flex: 1">
                                        <!-- Event Name - Clickable -->
                                        <MudText Typo="Typo.h6" Class="mb-1"
                                        Style="cursor: pointer;"
                                        @onclick="() => NavigateToEventDetails(evt.Id)">
                                            @evt.Name
                                        </MudText>

                                        <!-- Event Details -->
                                        <MudText Typo="Typo.body2" Class="mb-1">
                                            Price: @(evt.Price > 0 ? $"${evt.Price:F2}" : "Free") |
                                            Location: @(GetLocationString(evt)) |
                                            Organizer: @(string.IsNullOrEmpty(evt.OrganizerName) ? "Unknown" : evt.OrganizerName)
                                        </MudText>

                                    </div>
                                </div>
                            </ChildContent>

                            <!-- Description using MudListItem -->
                            <NestedList>
                                <MudListItem Dense="false"
                                Class="pa-0 mt-1"
                                Style="min-height: auto;">
                                    <MudText Typo="Typo.body1" Class="mt-1" Align="Align.Left" Style="margin-left:100px">
                                        @evt.Description
                                    </MudText>
                                </MudListItem>
                            </NestedList>
                        </MudListItem>
                        <MudDivider />
                    }
                </MudList>
            }
            else if (UpcomingEventsList is null)
            {
                <MudContainer Class="align-content-center">
                    <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
                    <MudText Typo="Typo.body1" Class="text-center my-4">
                        Loading...
                    </MudText>
                </MudContainer>

            }
            else if (!UpcomingEventsList.Any())
            {
                <MudText Typo="Typo.body1" Class="text-center my-4">
                    No upcoming events.
                </MudText>
            }
        </div>
    </MudCardContent>
</MudCard>

@code {
    [Parameter]
    public List<EventDto> UpcomingEventsList { get; set; } = new List<EventDto>();

    private void NavigateToEventDetails(int eventId)
    {
        //NavigationManager.NavigateTo($"/events/{eventId}"); //TODO update uri
    }

    private void NavigateToUserPage()
    {
        NavigationManager.NavigateTo("/profile");
    }

    private string GetLocationString(EventDto e)
    {
        if (e.Venue is null)
            return $"{e.Location.Latitude:F2}; {e.Location.Longitude:F2}";
        else
            return e.Venue.Name;
    }
}