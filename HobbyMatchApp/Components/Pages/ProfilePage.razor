@page "/Profile"
@rendermode InteractiveServer
@inject IOrganizerApiService organizerApiService
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using HobbyMatch.App.Services

<MudContainer Style="justify-content: center" MaxWidth="MaxWidth.Small">

    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h3" Align="Align.Center" Color="Color.Secondary" style="margin-bottom:16px">My Profile</MudText>
        <MudForm @bind-IsValid="@success" @bind-Errors="@errors" ReadOnly="@(!editable)">
            <MudTextField @ref="usernameField" T="string" Label="Username" Required="true" RequiredError="User name is required!" Style="margin-bottom:8px" />
            <MudTextField @ref="emailField" T="string" Label="Email" Required="true" RequiredError="Email is required!"
            Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" Style="margin-bottom:8px" />
            <MudTextField @ref="passwordField" T="string" Label="Password" HelperText="Choose a strong password" InputType="InputType.Password"
            Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
            Style="margin-bottom:8px" RequiredError="Password is required!" />
            <MudTextField T="string"
            Label="Password" HelperText="Repeat the password" InputType="InputType.Password"
            Validation="@(new Func<string, string?>(PasswordMatch))" Style="margin-bottom:8px" />
            @if (accountType != null && accountType.Value == "BusinessClient")
            {
                <MudTextField @ref="taxIdField" T="string" Label="TaxId" Required="true" RequiredError="Tax ID is required!" style="margin-bottom:8px" />
            }
            <div class="d-flex">
                <MudRadioGroup @ref="accountType" T="string" Required="true" RequiredError="Account type is required!" Style="margin-bottom:8px" Disabled=true>
                    <MudRadio Color="Color.Primary" Value="@("User")">User</MudRadio>
                    <MudRadio Color="Color.Primary" Value="@("BusinessClient")">Business Client</MudRadio>
                </MudRadioGroup>
            </div>
            <div class="d-flex align-center justify-space-between">
                @if(!editable)
                {
                    <button Type="button" Class="btn btn-primary" @onclick="EditAction">Edit</button>

                }
                else
                {
                    <button Type="button" Class="btn btn-primary" @onclick="EditAction">Save changes</button>
                }
            </div>
        </MudForm>
    </MudPaper>
</MudContainer>

@code {
    bool success;
    bool editable = false;
    string[] errors = { };
    MudTextField<string>? usernameField;
    MudTextField<string>? emailField;
    MudTextField<string>? passwordField;
    MudTextField<string>? taxIdField;
    MudRadioGroup<string>? accountType;
    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string? PasswordMatch(string arg)
    {
        if (passwordField?.Value is not null && passwordField.Value != arg)
            return "Passwords don't match";
        return null;
    }
    private void EditAction()
    {
        editable = !editable;
    }
}
